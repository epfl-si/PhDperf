## This tasks file is invoked with `import_tasks` as many times as we
## want k8s-run quorum members in the Zeebe cluster.
##
## The expected variables are:
##
## - node_id
##
##   The node ID as an integer between 0 (inclusive) and the
##   cluster size (exclusive)
##
## - data_volume
##
##   The description of the volume to use to store /usr/local/zeebe/data,
##   as a Kubernetes-compliant data structure described at
##   https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#volume-v1-core
##   (in practice, either an `emptyDir:` or a `persistentVolumeClaim:` dict)
##
## - peers
##
##   A list of host:port addresses to use to talk to the other quorum members.
##
## - env
##
##   An optional dict of environment variables to set or override, e.g. to
##   configure an exporter

- name: "{{ _name }} StatefulSet"
  openshift:
    state: latest
    apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      name: "{{ _name }}"
      namespace: "{{ openshift_namespace }}"
    spec:
      replicas: 1
      selector:
         matchLabels:
           zeebe-quorum-member: "{{ _quorum_name }}"
      template:
        metadata:
          labels: "{{ _labels }}"
        spec:
          containers:
            - name: zeebe
              image: "{{ openshift_local_images_base }}/zeebe:{{ zeebe_version }}"
              env: >-
                {{ zeebe_env
                | combine(_ha_env)
                | combine(env | default({}))
                | to_k8s_env | community.general.lists_mergeby(S3_secret_env_vars, 'name') }}
              resources:
                limits:
                  cpu: '250m'
                  memory: "{{ '2500M' if openshift_namespace == 'phd-assess' else '2000M' }}"
              ports:
                - name: metrics
                  containerPort: 9600
              volumeMounts:
                - name: zeebe-data
                  mountPath: /usr/local/zeebe/data
          volumes:
            - >-
              {{ _volume_name | combine(data_volume) }}
  vars:
    _name: >-
      {{ "zeebe-" + (node_id | string) }}
    _quorum_name: "zeebe-quorum-{{ node_id | default('_') }}"
    _volume_name:
      name: zeebe-data
    _labels:
      for-service: "{{ zeebe_gateway_servicename }}"
      for-prometheus-job: zeebe
      zeebe-quorum-member: "{{ _quorum_name }}"
    _match_labels_single_node:
      for-service: "{{ zeebe_gateway_servicename }}"
    # Gets merged with `data_volume` provided by caller
    _ha_env:
      ZEEBE_BROKER_CLUSTER_NODEID: "{{ node_id | default('_') | string }}"
      ZEEBE_BROKER_CLUSTER_INITIALCONTACTPOINTS: >-
        {{ ",".join(peers | default([])) }}
      # https://github.com/camunda-cloud/zeebe/issues/5410 and
      # https://github.com/camunda-cloud/zeebe/blob/develop/qa/integration-tests/src/test/java/io/camunda/zeebe/it/network/AdvertisedAddressTest.java#L150
      ZEEBE_BROKER_NETWORK_INTERNALAPI_ADVERTISEDHOST: >-
        {{ _quorum_name }}
      ZEEBE_BROKER_NETWORK_COMMANDAPI_ADVERTISEDHOST: >-
        {{ _quorum_name }}
  S3_secret_env_vars:
    - name: "ZEEBE_BROKER_DATA_BACKUP_S3_BUCKETNAME"
      valueFrom:
        secretKeyRef:
          name: "ZEEBE_BROKER_DATA_BACKUP_S3_BUCKETNAME"
          key: "{{ ZEEBE_BROKER_DATA_BACKUP_S3_BUCKETNAME }}"
    - name: "ZEEBE_BROKER_DATA_BACKUP_S3_ACCESSKEY"
      valueFrom:
        secretKeyRef:
          name: "ZEEBE_BROKER_DATA_BACKUP_S3_ACCESSKEY"
          key: "{{ ZEEBE_BROKER_DATA_BACKUP_S3_ACCESSKEY }}"
    - name: "ZEEBE_BROKER_DATA_BACKUP_S3_SECRETKEY"
      valueFrom:
        secretKeyRef:
          name: "ZEEBE_BROKER_DATA_BACKUP_S3_SECRETKEY"
          key: "{{ ZEEBE_BROKER_DATA_BACKUP_S3_SECRETKEY }}"
